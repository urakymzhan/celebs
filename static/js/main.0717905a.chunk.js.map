{"version":3,"sources":["secret.js","components/CelebsList.js","components/CelebsHeader.js","components/FavoritesList.js","components/FormContainer.js","components/PaginationContainer.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["api_key","base_url","profile_sizes","customStyles","content","background","zIndex","button","color","CelebsList","celebrity","showModal","handleOpenModal","handleCloseModal","modalContentData","Fragment","name","popularity","src","profile_path","alt","known_for","map","movie","key","id","onClick","title","isOpen","contentLabel","style","class","original_title","overview","poster_path","release_date","vote_average","vote_count","CelebsHeader","FavoritesList","favorites","className","favorite","idx","borderBottom","marginBottom","fname","lname","mname","gender","popular","interesting","hbeautiful","FormContainer","props","handleFormChange","handleFormSubmit","onSubmit","htmlFor","type","value","onChange","marginTop","checked","PaginationContainer","activePage","itemsCountPerPage","totalItemsCount","limit","leftLimit","pageRangeDisplayed","Search","handleSearchChange","handleSearchClick","placeholder","fetchJson","main_api","fetch","then","res","json","celebsData","catch","err","console","log","App","handlePageChange","pageNumber","state","length","result","setState","results","total_pages","total_results","isLoading","e","target","searchText","preventDefault","search_api","this","page","React","Component","Boolean","window","location","hostname","match","require","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0717905a.chunk.js","sourcesContent":["export const api_key = 'df8b08ecb436696fee41a00f8d87a540';\nexport const base_url = 'http://image.tmdb.org/t/p/';\nexport const profile_sizes = ['w45', 'w185', 'h632', 'original'];\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport { base_url, profile_sizes } from '../secret';\n\nconst customStyles = {\n  content: {\n    background: '#333',\n    zIndex: 9,\n  },\n  button: {\n    color: 'black',\n  },\n};\n\nexport default function CelebsList({\n  celebrity,\n  showModal,\n  handleOpenModal,\n  handleCloseModal,\n  modalContentData,\n}) {\n  return (\n    <React.Fragment>\n      <tr>\n        <td>{celebrity.name}</td>\n        <td>{celebrity.popularity}</td>\n        <td>\n          <img\n            src={`${base_url}${profile_sizes[0]}${celebrity.profile_path}`}\n            alt=\"celebrity avatar\"\n          />\n        </td>\n        <td>\n          {celebrity.known_for.map((movie) => {\n            return (\n              <p\n                key={movie.id}\n                onClick={() => handleOpenModal(movie)}\n                id=\"open-movie-title\"\n              >\n                {movie.title}\n              </p>\n            );\n          })}\n          <ReactModal\n            isOpen={showModal}\n            contentLabel=\"Movie Information\"\n            style={customStyles}\n          >\n            <button onClick={handleCloseModal} id=\"modalCloseBtn\">\n              X\n            </button>\n            <div class=\"modalContent\">\n              <h1 id=\"movie-title\">{modalContentData.original_title}</h1>\n              <p id=\"movie-description\">{modalContentData.overview}</p>\n\n              <p id=\"movie-poster\">\n                <img\n                  src={`${base_url}${profile_sizes[1]}${modalContentData.poster_path}`}\n                  alt=\"movie avatar\"\n                />\n              </p>\n              <p id=\"movie-rel-date\">\n                Release Date: <span>{modalContentData.release_date}</span>\n              </p>\n              <p id=\"movie-vote\">\n                {' '}\n                Average Vote: <span>{modalContentData.vote_average}</span>\n              </p>\n              <p id=\"movie-view-count\">\n                Vote Count: <span>{modalContentData.vote_count}</span>\n              </p>\n            </div>\n          </ReactModal>\n        </td>\n      </tr>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function CelebsHeader() {\n  return (\n    <thead>\n      <tr>\n        <th>Full Name</th>\n        <th>Popularity</th>\n        <th>Profile</th>\n        <th>Known For</th>\n      </tr>\n    </thead>\n  );\n}\n","import React from 'react';\n\nexport default function FavoritesList({ favorites }) {\n  return (\n    <div className=\"favorites-container\">\n      <h2 style={{ color: 'orange' }}>My favorites: </h2>\n      {favorites &&\n        favorites.map((favorite, idx) => {\n          return (\n            <div style={{borderBottom: \"1px solid orange\", marginBottom: \"10px\"}}>\n              <p>\n                <span style={{color: \"#03a9f4\"}}>{idx + 1}.</span> {favorite.fname} {favorite.lname} {\" \"} | {' '}{favorite.mname} {\" \"} | {' '}\n                {favorite.gender} {\" \"} | {' '} {favorite.popularity} \n                {\" \"} | {' '}\n                Chose because it was: {favorite.popular ? 'Popular' : null}{' '}\n                {favorite.interesting ? 'Interesting' : null}{' '}\n                    {/* ideally hbeautiful should be based on gender*/}\n                {favorite.hbeautiful ? 'Handsome/Beautiful' : null}{' '}\n              </p>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function FormContainer(props) {\n  const {\n    fname,\n    lname,\n    mname,\n    gender,\n    popularity,\n    interesting,\n    popular,\n    hbeautiful,\n    handleFormChange,\n    handleFormSubmit,\n  } = props;\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleFormSubmit}>\n        <fieldset>\n          <legend>Submit your favorite</legend>\n          <label htmlFor=\"fname\">\n            First name:\n            <input\n              type=\"text\"\n              id=\"fname\"\n              name=\"fname\"\n              value={fname}\n              onChange={handleFormChange}\n            />\n          </label>\n          <label htmlFor=\"lname\">\n            Last name:\n            <input\n              type=\"text\"\n              id=\"lname\"\n              name=\"lname\"\n              value={lname}\n              onChange={handleFormChange}\n            />\n          </label>\n\n          <label htmlFor=\"mname\">\n            1 movie name:\n            <input\n              type=\"text\"\n              id=\"mname\"\n              name=\"mname\"\n              value={mname}\n              onChange={handleFormChange}\n            />\n          </label>\n\n          <label htmlFor=\"gender\">Gender of celebrity ?</label>\n          <label style={{ marginTop: 0 }}>\n            <input\n              id=\"gender\"\n              type=\"radio\"\n              name=\"gender\"\n              value=\"male\"\n              checked={gender === 'male'}\n              onChange={handleFormChange}\n            />\n            Male\n          </label>\n          <label style={{ marginTop: 0 }}>\n            <input\n              className=\"gender\"\n              type=\"radio\"\n              name=\"gender\"\n              value=\"female\"\n              checked={gender === 'female'}\n              onChange={handleFormChange}\n            />\n            Female\n          </label>\n\n          <label htmlFor=\"popularity\">\n            Popularity:\n            <input\n              type=\"number\"\n              id=\"popularity\"\n              name=\"popularity\"\n              value={popularity}\n              onChange={handleFormChange}\n            />\n          </label>\n\n          <label className=\"checkboxes-title\">\n            Why he/she is your favorite?\n          </label>\n\n          <label style={{ marginTop: 0 }}>\n            <input\n              name=\"interesting\"\n              type=\"checkbox\"\n              onChange={handleFormChange}\n              checked={interesting}\n              value=\"Interesting\"\n            />\n            Interesting\n          </label>\n          <label style={{ marginTop: 0 }}>\n            <input\n              name=\"popular\"\n              type=\"checkbox\"\n              onChange={handleFormChange}\n              checked={popular}\n              value=\"Popular\"\n            />\n            Popular\n          </label>\n          <label style={{ marginTop: 0 }}>\n            <input\n              name=\"hbeautiful\"\n              type=\"checkbox\"\n              onChange={handleFormChange}\n              checked={hbeautiful}\n              value=\"Handsome/Beautiful\"\n            />\n            Handsome/Beautiful\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport Pagination from 'react-js-pagination';\n\nexport default function PaginationContainer(props) {\n  const {\n    activePage,\n    itemsCountPerPage,\n    totalItemsCount,\n    onChange,\n    limit,\n    leftLimit,\n  } = props;\n\n  return (\n    <div className=\"pagination-container\">\n      <Pagination\n        activePage={activePage}\n        itemsCountPerPage={itemsCountPerPage}\n        totalItemsCount={totalItemsCount ? totalItemsCount : 0}\n        pageRangeDisplayed={5}\n        onChange={onChange}\n      />\n      <div>\n        Showing {leftLimit} - {limit} of {totalItemsCount ? totalItemsCount : 0}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Search({ handleSearchChange, handleSearchClick }) {\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"input\"\n        placeholder=\"Search by artist name\"\n        id=\"search\"\n        onChange={handleSearchChange}\n      />\n      <input\n        type=\"button\"\n        value=\"Search\"\n        id=\"searchBtn\"\n        onClick={handleSearchClick}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport CelebsList from './components/CelebsList';\nimport CelebsHeader from './components/CelebsHeader';\nimport FavoritesList from './components/FavoritesList';\nimport FormContainer from './components/FormContainer';\nimport PaginationContainer from './components/PaginationContainer';\nimport Search from './components/Search';\nimport { api_key } from './secret';\n\nconst fetchJson = (activePage) => {\n  const main_api = `https://api.themoviedb.org/3/person/popular?api_key=${api_key}&language=en-US&page=${activePage}`;\n  return (\n    fetch(main_api)\n      .then((res) => res.json())\n      .then((celebsData) => celebsData)\n      // ideally show api error on browser\n      .catch((err) => console.log(err))\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      celebsData: [],\n      activePage: 1,\n      total_pages: 0,\n      total_results: 0,\n      isLoading: true,\n      limit: 20,\n      leftLimit: 0,\n      searchText: '',\n\n      showModal: false,\n      modalContentData: [],\n\n      fname: '',\n      lname: '',\n      mname: '',\n      gender: 'male',\n      popularity: 0,\n      interesting: false,\n      popular: false,\n      hbeautiful: false,\n\n      favorites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { activePage } = this.state;\n    fetchJson(activePage).then((result) => {\n      this.setState({\n        celebsData: result.results,\n        activePage: result.page,\n        total_pages: result.total_pages,\n        total_results: result.total_results,\n        isLoading: false,\n      });\n    });\n  }\n\n  handlePageChange = (pageNumber) => {\n    const limit = pageNumber * this.state.celebsData.length;\n    const leftLimit = (pageNumber - 1) * this.state.celebsData.length;\n\n    fetchJson(pageNumber).then((result) => {\n      this.setState({\n        celebsData: result.results,\n        total_pages: result.total_pages,\n        total_results: result.total_results,\n        activePage: pageNumber,\n        isLoading: false,\n        limit: limit,\n        leftLimit: leftLimit,\n      });\n    });\n  };\n\n  handleSearchChange = (e) => {\n    // use better validation maybe\n    if (e.target.value !== '') {\n      this.setState({ searchText: e.target.value });\n    }\n  };\n  handleSearchClick = (e) => {\n    e.preventDefault();\n    const { activePage, searchText } = this.state;\n    const search_api = `https://api.themoviedb.org/3/search/person?api_key=${api_key}&language=en-US&query=${searchText}&page=${activePage}&include_adult=false`;\n    // use better validation maybe\n    if (searchText !== '') {\n      fetch(search_api)\n        .then((res) => res.json())\n        .then((result) =>\n          this.setState({\n            celebsData: result.results,\n            total_pages: result.total_pages,\n            total_results: result.total_results,\n            isLoading: false,\n          })\n        )\n        .catch((err) => console.log(err));\n    }\n  };\n\n  handleOpenModal = (movie) => {\n    this.setState({ showModal: true, modalContentData: movie });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  handleFormChange = (e) => {\n    console.log('value: ', e.target.value);\n    console.log('name: ', e.target.name);\n    console.log('checked: ', e.target.checked);\n\n    const { value, name, type, checked } = e.target;\n\n    type === 'checkbox'\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const {\n      fname,\n      lname,\n      mname,\n      gender,\n      popularity,\n      interesting,\n      popular,\n      hbeautiful,\n    } = this.state;\n\n    let favorites = [];\n    favorites = [\n      ...this.state.favorites,\n      {\n        fname,\n        lname,\n        mname,\n        gender,\n        popularity,\n        interesting,\n        popular,\n        hbeautiful,\n      },\n    ];\n    // favorites.push({\n    //   fname,\n    //   lname,\n    //   mname,\n    //   gender,\n    //   popularity,\n    //   interesting,\n    //   popular,\n    //   hbeautiful,\n    // });\n\n    this.setState({ favorites });\n  };\n  render() {\n    const { celebsData, modalContentData, favorites } = this.state;\n    const {\n      activePage,\n      total_results,\n      isLoading,\n      limit,\n      leftLimit,\n      showModal,\n    } = this.state;\n\n    const {\n      fname,\n      lname,\n      mname,\n      gender,\n      popularity,\n      interesting,\n      popular,\n      hbeautiful,\n    } = this.state;\n\n    let result = (\n      <tr>\n        <td>Loading...</td>\n        <td>Loading...</td>\n        <td>Loading...</td>\n        <td>Loading...</td>\n      </tr>\n    );\n    if (!isLoading && celebsData.length === 0) {\n      result = (\n        <tr>\n          <td>No result</td>\n          <td>No result</td>\n          <td>No result</td>\n          <td>No result</td>\n        </tr>\n      );\n    }\n    if (!isLoading && celebsData && celebsData.length > 0) {\n      result = celebsData.map((celebrity) => {\n        return (\n          <CelebsList\n            key={celebrity.id}\n            celebrity={celebrity}\n            showModal={showModal}\n            handleOpenModal={this.handleOpenModal}\n            handleCloseModal={this.handleCloseModal}\n            modalContentData={modalContentData}\n          />\n        );\n      });\n    }\n    // console.log('celebsData', celebsData);\n    return (\n      <div className=\"App\">\n        <Search\n          handleSearchChange={this.handleSearchChange}\n          handleSearchClick={this.handleSearchClick}\n        />\n\n        <table>\n          <CelebsHeader />\n          <tbody>{result}</tbody>\n        </table>\n        <PaginationContainer\n          activePage={activePage}\n          itemsCountPerPage={celebsData.length}\n          totalItemsCount={total_results}\n          onChange={this.handlePageChange}\n          limit={limit}\n          leftLimit={leftLimit}\n        />\n\n        <div className=\"form-favorites-container\">\n          <FormContainer\n            fname={fname}\n            lname={lname}\n            mname={mname}\n            gender={gender}\n            popularity={popularity}\n            interesting={interesting}\n            popular={popular}\n            hbeautiful={hbeautiful}\n            handleFormChange={this.handleFormChange}\n            handleFormSubmit={this.handleFormSubmit}\n          />\n          <FavoritesList favorites={favorites} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('bootstrap/less/bootstrap.less');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}